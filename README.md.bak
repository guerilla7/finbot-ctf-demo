# OWASP Agentic AI CTF - FinBot DEMO

[![License](https://img.shields.io/badge/Lic### macOS One-Click Script

```
./scripts/run-local-macos.sh
```

This will:
- Create/activate .venv
- Install requirements (llama-cpp is optional; uncomment in script to install)
- Download a model if none available (prefers Qwen3-4B-Instruct â†’ Qwen2.5-4B â†’ TinyLlama)
- Export `USE_LOCAL_LLM=true` and start Flask on port 5001_2.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)
[![Version](https://img.shields.io/badge/version-1.0.0-brightgreen.svg)](https://github.com/guerilla7/finbot-ctf-demo)
[![Python](https://img.shields.io/badge/python-3.9%2B-blue)](https://www.python.org/downloads/)
[![Flask](https://img.shields.io/badge/Flask-2.0%2B-orange)](https://flask.palletsprojects.com/)
[![Status](https://img.shields.io/badge/status-active-success.svg)](https://github.com/guerilla7/finbot-ctf-demo)
[![Security: OWASP](https://img.shields.io/badge/Security-OWASP-blue.svg)](https://owasp.org/www-project-top-10/)
[![CTF](https://img.shields.io/badge/CTF-Agentic%20AI-red.svg)](https://genai.owasp.org)

Welcome to the **OWASP Agentic AI CTF Demo â€“ FinBot AI Assistant**, an interactive Capture-the-Flag experience designed to explore vulnerabilities in agentic AI systems. This environment is intended for educational use only.

## Live Instance

ðŸ‘‰ **Launch the Live FinBot CTF: [owasp-finbot-ctf.org](http://owasp-finbot-ctf.org/)**

Redirected to: https://owasp-finbot-ctf-demo.onrender.com
<br></br>
## Application Screenshots

### Entry Page
![Entry Page](docs/screenshots/entry.png)

### Home Page
![Home Page](docs/screenshots/index.png)

### FinBot Chat
![FinBot Chat](docs/screenshots/finbot-chat.png)

### Vendor Portal
![Vendor Portal](docs/screenshots/vendor-portal.png)

### Admin Dashboard
![Admin Dashboard](docs/screenshots/admin-dashboard.png)

## UI Features

### Neon Cyber Theme

The application features a unified neon cyberpunk theme with:

- Matrix-style overlay effects
- Consistent styling across all pages
- Shared CSS in `src/static/css/neon.css`

### Background Music System

- 8-bit cyberpunk background music starts after clicking "Enter Demo"
- Toggle music on/off via the button in site header
- Adjust volume with the +/- controls next to the toggle
- Settings persist via localStorage across page navigation
- Self-contained fallback: if no MP3 is available, generates a built-in chiptune

## FinBot Chat UI (New)

- Open `finbot-chat.html` from the app (Home > FinBot Chat, Vendor Portal > FinBot Chat, or Admin Dashboard > FinBot Chat)
- Type prompts like:
	- "Find invoice INV-1001 and process it"
	- "Show the decision, confidence, and reasoning for INV-1001"
- Optional security:
	- Set `CHAT_API_TOKEN` to require `Authorization: Bearer <token>` on `/api/finbot/chat`
	- Toggle "Allow actions" in the UI to prevent the assistant from calling state-changing tools
- OpenAI configuration:
	- Set `OPENAI_API_KEY` in the environment to enable live LLM calls; otherwise, falls back to Local LLM


## Local LLM Mode (Self-Contained)

You can run FinBot without any external API by enabling the local LLM path. Optionally, use real on-device models via llama.cpp (GGUF).

### Configuration Options

- `USE_LOCAL_LLM=true` (forces local path and disables OpenAI)
- `LOCAL_LLM_MODEL_PATH=/abs/path/to/model.gguf` (optional; requires `llama-cpp-python`)
- `HF_TOKEN=your_huggingface_token` (optional; needed for gated model downloads)

### Models (default order of preference)

1. Qwen3-4B-Instruct (requires HF_TOKEN)
2. Qwen2.5-4B-Instruct (fallback, gated)
3. TinyLlama-1.1B-Chat (free fallback)

macOS one-click script:

```
./scripts/run-local-macos.sh
```

This will:
- create/activate .venv
- install requirements (llama-cpp is optional; uncomment inside the script to install)
- download a small GGUF model if `LOCAL_LLM_MODEL_PATH` isnâ€™t set
- export `USE_LOCAL_LLM=true` and start Flask on port 5001

Manual enablement:

```
export USE_LOCAL_LLM=true
# optional:
# pip install 'llama-cpp-python>=0.2.90'
# ./scripts/download-local-model.sh
# export LOCAL_LLM_MODEL_PATH="$PWD/models/qwen3_4b_instruct.Q4_K_M.gguf"
flask --app src/main.py run --port 5001 --no-reload
```

Note: When `LOCAL_LLM_MODEL_PATH` is not set or the engine isn't available, FinBot returns short, deterministic replies but still performs all invoice operations via built-in tools.

## Repository Structure and Contribution Notes

### Important Folders

- `src/` - Main application code
- `src/models/` - Data models (User, Vendor)
- `src/routes/` - Flask routes (admin, user, vendor)
- `src/services/` - Business logic including `finbot_agent.py`
- `src/static/` - Web assets (HTML, CSS, JS)
- `src/static/css/` - Shared stylesheets (neon.css)
- `src/static/js/` - JavaScript (including music.js)
- `src/static/music/` - Background music assets
- `models/` - Local LLM models (gitignored)
- `scripts/` - Utility scripts
- `docs/` - Documentation

### Git Usage Guidelines

Large model files (*.gguf, *.bin, etc.) are excluded via `.gitignore` to avoid repository bloat:

```
# Local LLM models and large artifacts
models/*
!models/.gitkeep
*.gguf
*.bin
*.pth
*.safetensors
```

Use `scripts/download-local-model.sh` to download models at runtime instead of committing them.

## CTF Challenges
ðŸŽ¯ **[Goal Manipulation](docs/FinBot-CTF-walkthrough-goal-manipulation.md)**
<br></br>

## Participation Policy

Please use this environment ethically and responsibly:
- Educational use only â€“ system is monitored and logged
- Do not attempt to misuse or damage the environment
- Respect system data, rules, and other participants
- Violation of policies may result in access restriction

By using the system, you acknowledge and agree to these terms.
<br></br>

## About the Project

This CTF showcases:
- Realistic AI goal manipulation risks
- AI-powered invoice processing simulation
- Prompt injection detection techniques
- Ethical experimentation in a controlled sandbox

Built as part of the OWASP GenAI Security Projectâ€™s [Agentic Security Initiative](https://genai.owasp.org/initiatives/#agenticinitiative).

**Creators:** [**Helen Oakley**](https://www.linkedin.com/in/helen-oakley/) and [**Allie Howe**](https://www.linkedin.com/in/allisonhowe/)
<br></br>


## How To Contribute

- Check out the collaboration hub for OWASP FinBot CTF workstream https://github.com/OWASP-ASI/FinBot-CTF-workstream 
<br></br>

## License

Licensed under the Apache License, Version 2.0 (the "License").

https://www.apache.org/licenses/LICENSE-2.0.html

Copyright 2025 OWASP GenAI Security Project and contributors.

